{
  "swagger": "2.0",
  "info": {
    "description": "The bol.com API for Retailers.",
    "version": "3.0.0",
    "title": "v3"
  },
  "host": "api.bol.com",
  "basePath": "/",
  "tags": [
    {
      "name": "Commission",
      "description": "Commission Resource"
    },
    {
      "name": "Inbounds",
      "description": "Inbound Resource"
    },
    {
      "name": "Invoices",
      "description": "Invoice Resource"
    },
    {
      "name": "Offers",
      "description": "Offer Resource"
    },
    {
      "name": "Orders",
      "description": "Order Resource"
    },
    {
      "name": "Process Status",
      "description": "Process Status Resource"
    },
    {
      "name": "Reductions",
      "description": "Reduction Resource"
    },
    {
      "name": "Returns",
      "description": "Return Resource"
    },
    {
      "name": "Shipments",
      "description": "Shipment Resource"
    },
    {
      "name": "Shipping Labels",
      "description": "Shippinglabel Resource"
    },
    {
      "name": "Transports",
      "description": "Transport Resource"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/retailer/commission": {
      "post": {
        "tags": [
          "Commission"
        ],
        "summary": "Get all commissions and reductions by EAN in bulk",
        "description": "Gets all commissions and possible reductions by EAN, condition and optionally price. No more than 100 EAN`s can be sent in a single request.",
        "operationId": "get-commissions",
        "consumes": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkCommissionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "$ref": "#/definitions/BulkCommissionResponse"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          },
          "404": {
            "description": "Not found: The requested item could not been found."
          }
        }
      }
    },
    "/retailer/commission/{ean}": {
      "get": {
        "tags": [
          "Commission"
        ],
        "summary": "Get all commissions and reductions by EAN per single EAN",
        "description": "Commissions can be filtered by condition, which defaults to NEW. If price is provided, the exact commission amount will also be calculated.",
        "operationId": "get-commission",
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "name": "ean",
            "in": "path",
            "description": "The EAN number associated with this product.",
            "required": true,
            "type": "string"
          },
          {
            "name": "condition",
            "in": "query",
            "description": "The condition of the offer.",
            "required": false,
            "type": "string",
            "default": "NEW",
            "enum": [
              "NEW",
              "AS_NEW",
              "GOOD",
              "REASONABLE",
              "MODERATE"
            ]
          },
          {
            "name": "price",
            "in": "query",
            "description": "The price of the product with a period as a decimal separator.",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "$ref": "#/definitions/Commission"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          },
          "404": {
            "description": "Not found: The requested item could not been found."
          }
        }
      }
    },
    "/retailer/inbounds": {
      "get": {
        "tags": [
          "Inbounds"
        ],
        "summary": "Get inbound shipment list",
        "description": "A List of inbound shipments.",
        "operationId": "get-inbounds",
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "name": "reference",
            "in": "query",
            "description": "A user defined reference to identify the inbound shipment with.",
            "required": false,
            "type": "string"
          },
          {
            "name": "bsku",
            "in": "query",
            "description": "The BSKU number associated with this product.",
            "required": false,
            "type": "string"
          },
          {
            "name": "creation-start",
            "in": "query",
            "description": "The creation start date to find the inbound shipment in ISO 8601 format.",
            "required": false,
            "type": "string"
          },
          {
            "name": "creation-end",
            "in": "query",
            "description": "The creation end date to find the inbound shipment in ISO 8601 format.",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "description": "The current state of the inbound shipment.",
            "required": false,
            "type": "string",
            "enum": [
              "Draft",
              "PreAnnounced",
              "ArrivedAtWH",
              "Cancelled"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number.",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "$ref": "#/definitions/Inbounds"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          },
          "404": {
            "description": "Not found: The requested item could not been found."
          }
        }
      },
      "post": {
        "tags": [
          "Inbounds"
        ],
        "summary": "Post inbound shipment",
        "description": "Create a new inbound shipment.",
        "operationId": "post-inbound",
        "consumes": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "inboundRequest",
            "description": "inboundRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InboundRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted: Successfully scheduled the request for processing.",
            "schema": {
              "$ref": "#/definitions/ProcessStatus"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          }
        }
      }
    },
    "/retailer/inbounds/delivery-windows": {
      "get": {
        "tags": [
          "Inbounds"
        ],
        "summary": "Get delivery windows for inbound shipments",
        "description": "Retrieve a list of available delivery windows for an inbound shipment.",
        "operationId": "get-delivery-windows",
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "name": "delivery-date",
            "in": "query",
            "description": "The expected delivery date for the inbound in ISO 8601 format.",
            "required": false,
            "type": "string",
            "default": "Today's date."
          },
          {
            "name": "items-to-send",
            "in": "query",
            "description": "The number of items that will be sent in the inbound.",
            "required": false,
            "type": "integer",
            "default": 1,
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "$ref": "#/definitions/Delivery windows for inbound shipments."
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          }
        }
      }
    },
    "/retailer/inbounds/fbb-transporters": {
      "get": {
        "tags": [
          "Inbounds"
        ],
        "summary": "Get FBB transporters list",
        "description": "Get FBB transporters list.",
        "operationId": "get-fbb-transporters",
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "$ref": "#/definitions/TransportersResponse"
            }
          }
        }
      }
    },
    "/retailer/inbounds/productlabels": {
      "post": {
        "tags": [
          "Inbounds"
        ],
        "summary": "Get FBB productlabels by EAN",
        "description": "Get FBB productlabels by EAN.",
        "operationId": "get-product-labels",
        "consumes": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "produces": [
          "application/vnd.retailer.v3+pdf"
        ],
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "description": "The printer format to create labels for.",
            "required": false,
            "type": "string",
            "default": "AVERY_J8159",
            "enum": [
              "AVERY_J8159",
              "AVERY_J8160",
              "AVERY_3474",
              "DYMO_99012",
              "BROTHER_DK11208D",
              "ZEBRA_Z_PERFORM_1000T"
            ]
          },
          {
            "in": "body",
            "name": "productLabelsRequest",
            "description": "The product labels to retrieve.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ProductLabelsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          },
          "404": {
            "description": "Not found: The requested item could not been found."
          }
        }
      }
    },
    "/retailer/inbounds/{inbound-id}": {
      "get": {
        "tags": [
          "Inbounds"
        ],
        "summary": "Get inbound by inbound id",
        "description": "Get inbound by inbound id.",
        "operationId": "get-inbound",
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "name": "inbound-id",
            "in": "path",
            "description": "A unique id for an inbound shipment.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "$ref": "#/definitions/Inbound"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          },
          "404": {
            "description": "Not found: The requested item could not been found."
          }
        }
      }
    },
    "/retailer/inbounds/{inbound-id}/packinglist": {
      "get": {
        "tags": [
          "Inbounds"
        ],
        "summary": "Get packing list by inbound id",
        "description": "Get packing list by inbound id.",
        "operationId": "get packing list",
        "produces": [
          "application/vnd.retailer.v3+pdf"
        ],
        "parameters": [
          {
            "name": "inbound-id",
            "in": "path",
            "description": "A unique id for an inbound shipment.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          },
          "404": {
            "description": "Not found: The requested item could not been found."
          }
        }
      }
    },
    "/retailer/inbounds/{inbound-id}/shippinglabel": {
      "get": {
        "tags": [
          "Inbounds"
        ],
        "summary": "Get FBB shippinglabel by inbound id",
        "description": "Get FBB shippinglabel by inbound id.",
        "operationId": "get-inbound-shipping-label",
        "produces": [
          "application/vnd.retailer.v3+pdf"
        ],
        "parameters": [
          {
            "name": "inbound-id",
            "in": "path",
            "description": "A unique id for an inbound shipment.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          },
          "404": {
            "description": "Not found: The requested item could not been found."
          }
        }
      }
    },
    "/retailer/inventory": {
      "get": {
        "tags": [
          "Inbounds"
        ],
        "summary": "Get LVB/FBB inventory",
        "description": "The inventory endpoint is a specific LVB/FBB endpoint. It only provides information about your fulfillment by bol.com inventory. This endpoint does not provide information about your own stock.",
        "operationId": "get-inventory",
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page number.",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "Filter inventory by quantity.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "stock",
            "in": "query",
            "description": "Filter inventory by stock level.",
            "required": false,
            "type": "string",
            "enum": [
              "sufficient",
              "insufficient"
            ]
          },
          {
            "name": "state",
            "in": "query",
            "description": "Filter inventory by NCK‘s stock level.",
            "required": false,
            "type": "string",
            "enum": [
              "saleable",
              "unsaleable"
            ]
          },
          {
            "name": "query",
            "in": "query",
            "description": "Filter inventory by EAN or product title.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "$ref": "#/definitions/InventoryResponse"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          }
        }
      }
    },
    "/retailer/invoices": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get all invoices",
        "description": "Gets a list of invoices, by default from the past 4 weeks. The optional period parameter can be used to retrieve invoices from a specific date range in the past. Invoices and their specifications can be downloaded separately in different media formats with the ‘GET an invoice by id’ and the ‘GET an invoice specification by id’ calls. The available media types differ per invoice and are listed per invoice within the response. Note: the media types listed in the response must be given in our standard API format.",
        "operationId": "get-invoices",
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "description": "The period to get invoices for. The period parameter has to comply to the ISO 6801 standard. The format of this standard is as follows: yyyy-mm-dd/yyyy-mm-dd. The period can be no longer than 32 days. The list of invoices is sorted on date in descending order.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          }
        }
      }
    },
    "/retailer/invoices/{invoice-id}": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get an invoice by invoice id",
        "description": "Gets an invoice by invoice id. The available media types differ per invoice and are listed within the response from the ‘GET all invoices’ call. Note: the media types listed in the response must be given in our standard API format.",
        "operationId": "get-invoice",
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml",
          "application/vnd.retailer.v3+pdf"
        ],
        "parameters": [
          {
            "name": "invoice-id",
            "in": "path",
            "description": "The id of the invoice",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          }
        }
      }
    },
    "/retailer/invoices/{invoice-id}/specification": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get an invoice specification by invoice id",
        "description": "Gets an invoice specification for an invoice with a paginated list of its transactions. The available media types differ per invoice specification and are listed within the response from the ‘GET all invoices’ call. Note, the media types listed in the response must be given in our standard API format.",
        "operationId": "get-invoice-specification",
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml",
          "application/vnd.retailer.v3+pdf",
          "application/vnd.retailer.v3+openxmlformats-officedocument.spreadsheetml.sheet"
        ],
        "parameters": [
          {
            "name": "invoice-id",
            "in": "path",
            "description": "The id of the invoice.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to get.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          }
        }
      }
    },
    "/retailer/offers": {
      "put": {
        "tags": [
          "Offers"
        ],
        "summary": "Create or update an offer",
        "description": "Offers are uniquely identified by the combination of EAN and condition. When inserting an EAN and condition combination that is already known as an offer, this request will result in an update for that offer. When inserting an EAN and condition combination that is not yet known as an offer, it will result in a newly created offer.",
        "operationId": "upsert-offer",
        "consumes": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "upsertRequest",
            "description": "upsertRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpsertRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted: Successfully scheduled the request for processing."
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          },
          "404": {
            "description": "Not found: The requested item could not been found."
          }
        }
      },
      "delete": {
        "tags": [
          "Offers"
        ],
        "summary": "Delete offers in bulk",
        "description": "Delete multiple offers in a single request up to a maximum of 1000.",
        "operationId": "delete-offers",
        "consumes": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "deleteBulkRequest",
            "description": "deleteBulkRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteBulkRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted: Successfully scheduled the request for processing."
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          }
        }
      }
    },
    "/retailer/offers/export": {
      "get": {
        "tags": [
          "Offers"
        ],
        "summary": "Create offers CSV file",
        "description": "Creates a CSV file containing all offers filtered by published status. If the published status isn't provided, all offers are included. The URL to the created CSV file is returned which can be used in the call to download the CSV file.",
        "operationId": "create-offer-csv-file",
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter the returned offers by published status.",
            "required": false,
            "type": "string",
            "enum": [
              "published",
              "not-published"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "$ref": "#/definitions/OfferFile"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          }
        }
      }
    },
    "/retailer/offers/export/{filename}": {
      "get": {
        "tags": [
          "Offers"
        ],
        "summary": "Download offers CSV file.",
        "description": "The CSV file is created by calling 'Create offers CSV file'.",
        "operationId": "download-offer-csv-file",
        "produces": [
          "application/vnd.retailer.v3+csv"
        ],
        "parameters": [
          {
            "name": "filename",
            "in": "path",
            "description": "The filename of the CSV file.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request."
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          },
          "404": {
            "description": "Not found: The requested item could not been found."
          }
        }
      }
    },
    "/retailer/offers/{ean}": {
      "get": {
        "tags": [
          "Offers"
        ],
        "summary": "Get an offer by product EAN",
        "description": "Gets all offers for products with the given EAN. If a condition is provided, only offers for the given product EAN with that condition are returned.",
        "operationId": "get-offer",
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "name": "ean",
            "in": "path",
            "description": "The EAN of the product to get offers for.",
            "required": false,
            "type": "string"
          },
          {
            "name": "condition",
            "in": "query",
            "description": "The condition of the product to filter offers by.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "$ref": "#/definitions/OfferResponse"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          },
          "404": {
            "description": "Not found: The requested item could not been found."
          }
        }
      }
    },
    "/retailer/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get all open orders",
        "description": "Gets a paginated list of all open orders sorted by date in descending order.",
        "operationId": "get-orders",
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page to get.",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32"
          },
          {
            "name": "shipments-method",
            "in": "query",
            "description": "The shipments method to filter orders by.",
            "required": false,
            "type": "string",
            "default": "FBR",
            "enum": [
              "FBR",
              "FBB"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "$ref": "#/definitions/Orders"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          },
          "404": {
            "description": "Not found: The requested item could not been found."
          }
        }
      }
    },
    "/retailer/orders/{order-id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get an order by order id",
        "description": "Gets an order by order id.",
        "operationId": "get-order",
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "name": "order-id",
            "in": "path",
            "description": "The id of the order to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "$ref": "#/definitions/Orders"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          },
          "404": {
            "description": "Not found: The requested item could not been found."
          }
        }
      }
    },
    "/retailer/orders/{order-item-id}/cancellation": {
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Cancel an order by order item id",
        "description": "This endpoint can be used to either confirm a cancellation request by the customer or to cancel an order you yourself are unable to fulfil.",
        "operationId": "cancel-order",
        "consumes": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "name": "order-item-id",
            "in": "path",
            "description": "The id of the order item to cancel.",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "cancellation",
            "description": "cancellation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cancellation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created: Successfully created the resource.",
            "schema": {
              "$ref": "#/definitions/ProcessStatus"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          }
        }
      }
    },
    "/retailer/orders/{order-item-id}/shipment": {
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Ship order item",
        "description": "Ship a single order item within an order by providing shipping information.",
        "operationId": "ship-order-item",
        "consumes": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "name": "order-item-id",
            "in": "path",
            "description": "The order item being confirmed.",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "shipmentRequest",
            "description": "shipmentRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShipmentRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created: Successfully created the resource.",
            "schema": {
              "$ref": "#/definitions/ProcessStatus"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          }
        }
      }
    },
    "/retailer/process-status": {
      "get": {
        "tags": [
          "Process Status"
        ],
        "summary": "Gets the status of an asynchronous process by entity id and event type for a seller",
        "description": "Retrieve a list of process statuses, which shows information regarding previously executed PUT/POST requests in descending order. You need to supply an entity id and event type.",
        "operationId": "get-process-status_1",
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "name": "entity-id",
            "in": "query",
            "description": "The entity id is not unique so you need to provide an event type. The entity id can either be order item id, transport id, return number or inbound reference.",
            "required": false,
            "type": "string"
          },
          {
            "name": "event-type",
            "in": "query",
            "description": "The event type can only be used in combination with the entity id.",
            "required": false,
            "type": "string",
            "enum": [
              "CONFIRM_SHIPMENT",
              "CANCEL_ORDER",
              "CHANGE_TRANSPORT",
              "HANDLE_RETURN_ITEM",
              "CREATE_INBOUND"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to get with max 25 results per page.",
            "required": false,
            "type": "integer",
            "default": 1,
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "$ref": "#/definitions/ProcessStatusResponse"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          }
        }
      }
    },
    "/retailer/process-status/{process-status-id}": {
      "get": {
        "tags": [
          "Process Status"
        ],
        "summary": "Get the status of an asynchronous process by id",
        "description": "Retrieve a specific process-status, which shows information regarding a previously executed PUT/POST request. All PUT/POST requests on the other endpoints will supply a process-status-id in the related response. You can use this id to retrieve a status by using the endpoint below.",
        "operationId": "get-process-status",
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "name": "process-status-id",
            "in": "path",
            "description": "The id of the process status being requested. This id is supplied in every response to a PUT/POST request on the other endpoints.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "$ref": "#/definitions/ProcessStatus"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          },
          "404": {
            "description": "Not found: The requested item could not been found."
          }
        }
      }
    },
    "/retailer/purchasable-shippinglabels/{order-item-id}": {
      "get": {
        "tags": [
          "Shipping Labels"
        ],
        "summary": "Get purchasable shipping labels by order item id",
        "description": "Retrieves all available shipping labels based on the supplied order item.",
        "operationId": "get-shipping-labels",
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "name": "order-item-id",
            "in": "path",
            "description": "The order item id of the order to get purchasable shipping labels from.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "$ref": "#/definitions/PurchasableShippingLabelsResponse"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          },
          "404": {
            "description": "Not found: The requested item could not been found."
          }
        }
      }
    },
    "/retailer/reductions": {
      "get": {
        "tags": [
          "Reductions"
        ],
        "summary": "Get reductions list",
        "description": "This endpoint will return a list EAN’s that are eligible for reductions on the commission fee.",
        "operationId": "get-reductions",
        "produces": [
          "application/vnd.retailer.v3+csv"
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request."
          }
        }
      }
    },
    "/retailer/reductions/latest": {
      "get": {
        "tags": [
          "Reductions"
        ],
        "summary": "Get latest reductions filename",
        "description": "This endpoint below will return a filename of the latest reductions list. The response from this endpoint can be compared to the response header that was given back from the Get Reductions List endpoint",
        "operationId": "get-latest-reductions-filename",
        "produces": [
          "application/vnd.retailer.v3+csv"
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/retailer/returns": {
      "get": {
        "tags": [
          "Returns"
        ],
        "summary": "Get all returns",
        "description": "Retrieves all returns, which are sorted by date in descending order.",
        "operationId": "handle-return",
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page to get.",
            "required": false,
            "type": "integer",
            "default": 1,
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "handled",
            "in": "query",
            "description": "The status of the returns you wish to see, shows either handled or unhandled returns. The id of the order item to cancel.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "shipments-method",
            "in": "query",
            "description": "The shipments method to filter orders by.",
            "required": false,
            "type": "string",
            "default": "FBR",
            "enum": [
              "FBR",
              "FBB"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "$ref": "#/definitions/ReturnsResponse"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          }
        }
      }
    },
    "/retailer/returns/{return-number}": {
      "put": {
        "tags": [
          "Returns"
        ],
        "summary": "Handle a return",
        "description": "Allows the user to handle a return. This can be to either handle an open return, or change the handlingResult of an already handled return. The latter is only possible in limited scenarios, please check the returns documentation for a complete list.",
        "operationId": "handle-return_1",
        "consumes": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "name": "return-number",
            "in": "path",
            "description": "The return number.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "handlingResult",
            "description": "The handling result requested by the user.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ReturnRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted: Successfully scheduled the request for processing.",
            "schema": {
              "$ref": "#/definitions/ProcessStatus"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          }
        }
      }
    },
    "/retailer/shipments": {
      "get": {
        "tags": [
          "Shipments"
        ],
        "summary": "Get shipment list",
        "description": "With this endpoint you are able to retrieve your shipments. The shipments will be sorted by date in descending order.",
        "operationId": "get-shipments",
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page number to get.",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32"
          },
          {
            "name": "shipments-method",
            "in": "query",
            "description": "The shipments method. Fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).",
            "required": false,
            "type": "string",
            "default": "FBR",
            "enum": [
              "FBR",
              "FBB"
            ]
          },
          {
            "name": "order-id",
            "in": "query",
            "description": "The id of the order to get shipment information for.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "$ref": "#/definitions/ShipmentResponse"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          }
        }
      }
    },
    "/retailer/shipments/{shipment-id}": {
      "get": {
        "tags": [
          "Shipments"
        ],
        "summary": "Get a shipment by shipment id",
        "description": "Retrieve a single shipment by its corresponding id.",
        "operationId": "get-shipment",
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "name": "shipment-id",
            "in": "path",
            "description": "The id of the shipment.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "$ref": "#/definitions/Shipment"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          },
          "404": {
            "description": "Not found: The requested item could not been found."
          }
        }
      }
    },
    "/retailer/transports/{transport-id}": {
      "put": {
        "tags": [
          "Transports"
        ],
        "summary": "Add transport information by transport id",
        "description": "Add information to an existing transport. The transport id is part of the shipment. You can retrieve the transport id through the GET shipment list request.",
        "operationId": "add-transport-information-by-transport-id",
        "consumes": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "produces": [
          "application/vnd.retailer.v3+json",
          "application/vnd.retailer.v3+xml"
        ],
        "parameters": [
          {
            "name": "transport-id",
            "in": "path",
            "description": "The transport id.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "changeTransport",
            "description": "The change transport requested by the user.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ChangeTransportRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created: Successfully created the resource.",
            "schema": {
              "$ref": "#/definitions/ProcessStatus"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          }
        }
      }
    },
    "/retailer/transports/{transport-id}/shipping-label": {
      "get": {
        "tags": [
          "Transports"
        ],
        "summary": "Get shipping label by transport id",
        "operationId": "getShippingLabelUsingGET",
        "produces": [
          "application/pdf"
        ],
        "parameters": [
          {
            "name": "transport-id",
            "in": "path",
            "description": "The transport id.",
            "required": false,
            "type": "integer",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Successfully processed the request.",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          "400": {
            "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information."
          },
          "404": {
            "description": "Not found: The requested item could not been found."
          }
        }
      }
    }
  },
  "definitions": {
    "AddressDetails": {
      "type": "object",
      "required": [
        "city",
        "countryCode",
        "email",
        "firstName",
        "houseNumber",
        "salutationCode",
        "streetName",
        "surName",
        "zipCode"
      ],
      "properties": {
        "addressSupplement": {
          "type": "string",
          "example": "Lorem Ipsum",
          "description": "The address supplement.",
          "allowEmptyValue": false
        },
        "city": {
          "type": "string",
          "example": "Utrecht",
          "description": "The city name.",
          "allowEmptyValue": false
        },
        "company": {
          "type": "string",
          "example": "bol.com",
          "description": "The company name.",
          "allowEmptyValue": false
        },
        "countryCode": {
          "type": "string",
          "example": "NL",
          "description": "The country code.",
          "allowEmptyValue": false
        },
        "deliveryPhoneNumber": {
          "type": "string",
          "example": "012123456",
          "description": "The delivery phone number.",
          "allowEmptyValue": false
        },
        "email": {
          "type": "string",
          "example": "billie@verkopen.bol.com",
          "description": "The e-mail address.",
          "allowEmptyValue": false
        },
        "extraAddressInformation": {
          "type": "string",
          "example": "Apartment",
          "description": "Extra information about the address.",
          "allowEmptyValue": false
        },
        "firstName": {
          "type": "string",
          "example": "Billie",
          "description": "The first name.",
          "allowEmptyValue": false
        },
        "houseNumber": {
          "type": "string",
          "example": 1,
          "description": "The house number.",
          "allowEmptyValue": false
        },
        "houseNumberExtended": {
          "type": "string",
          "example": "B",
          "description": "The extension on house number.",
          "allowEmptyValue": false
        },
        "salutationCode": {
          "type": "string",
          "example": "02",
          "description": "The salutation code.",
          "allowEmptyValue": false
        },
        "streetName": {
          "type": "string",
          "example": "Dorpstraat",
          "description": "The street name.",
          "allowEmptyValue": false
        },
        "surName": {
          "type": "string",
          "example": "Jansen",
          "description": "The surname.",
          "allowEmptyValue": false
        },
        "vatNumber": {
          "type": "string",
          "example": "NL999999999B99",
          "description": "The VAT number.",
          "allowEmptyValue": false
        },
        "zipCode": {
          "type": "string",
          "example": "1111 ZZ",
          "description": "The ZIP code.",
          "allowEmptyValue": false
        }
      },
      "title": "AddressDetails",
      "description": "The address details of the order"
    },
    "BulkCommissionQuery": {
      "type": "object",
      "required": [
        "ean"
      ],
      "properties": {
        "condition": {
          "type": "string",
          "example": "NEW",
          "description": "The condition of the offer.",
          "allowEmptyValue": false,
          "enum": [
            "NEW",
            "AS_NEW",
            "GOOD",
            "REASONABLE",
            "MODERATE"
          ]
        },
        "ean": {
          "type": "string",
          "example": "0000007740404",
          "description": "The EAN number associated with this product.",
          "allowEmptyValue": false,
          "minLength": 1,
          "maxLength": 2147483647
        },
        "price": {
          "type": "number",
          "example": 10.99,
          "description": "The price of the product with a period as a decimal separator.",
          "allowEmptyValue": false,
          "minimum": 0.0,
          "maximum": 9999.0,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        }
      },
      "title": "BulkCommissionQuery"
    },
    "BulkCommissionRequest": {
      "type": "object",
      "required": [
        "commissionQueries"
      ],
      "properties": {
        "commissionQueries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BulkCommissionQuery"
          }
        }
      },
      "title": "BulkCommissionRequest"
    },
    "BulkCommissionResponse": {
      "type": "object",
      "required": [
        "commissions"
      ],
      "properties": {
        "commissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Commission"
          }
        }
      },
      "title": "BulkCommissionResponse"
    },
    "Cancellation": {
      "type": "object",
      "required": [
        "dateTime",
        "reasonCode"
      ],
      "properties": {
        "dateTime": {
          "type": "string",
          "format": "date-time",
          "example": "2018-01-31T15:30:41+01:00",
          "description": "The date/time in ISO 8601 format when the article was cancelled.",
          "allowEmptyValue": false
        },
        "reasonCode": {
          "type": "string",
          "example": "BAD_CONDITION",
          "description": "The code representing the reason for cancellation.",
          "allowEmptyValue": false,
          "enum": [
            "OUT_OF_STOCK",
            "REQUESTED_BY_CUSTOMER",
            "BAD_CONDITION",
            "HIGHER_SHIPCOST",
            "INCORRECT_PRICE",
            "NOT_AVAIL_IN_TIME",
            "NO_BOL_GUARANTEE",
            "ORDERED_TWICE",
            "RETAIN_ITEM",
            "TECH_ISSUE",
            "UNFINDABLE_ITEM",
            "OTHER"
          ]
        }
      },
      "title": "Cancellation"
    },
    "ChangeTransportRequest": {
      "type": "object",
      "properties": {
        "trackAndTrace": {
          "type": "string",
          "example": "3SBOL0987654321",
          "description": "The track and trace code associated with this transport. The entered track and trace code will be verified. If you do not have the code, please omit this attribute entirely.",
          "allowEmptyValue": false,
          "minLength": 4,
          "maxLength": 50
        },
        "transporterCode": {
          "type": "string",
          "example": "TNT",
          "allowEmptyValue": false,
          "enum": [
            "BRIEFPOST",
            "UPS",
            "TNT",
            "TNT-EXTRA",
            "TNT_BRIEF",
            "TNT-EXPRESS",
            "DYL",
            "DPD-NL",
            "DPD-BE",
            "BPOST_BE",
            "BPOST_BRIEF",
            "DHLFORYOU",
            "GLS",
            "FEDEX_NL",
            "FEDEX_BE",
            "OTHER",
            "DHL",
            "DHL_DE",
            "DHL-GLOBAL-MAIL",
            "TSN",
            "FIEGE",
            "TRANSMISSION",
            "PARCEL-NL",
            "LOGOIX",
            "PACKS",
            "COURIER",
            "RJP"
          ]
        }
      },
      "title": "ChangeTransportRequest"
    },
    "Commission": {
      "type": "object",
      "required": [
        "fixedAmount",
        "percentage",
        "reductions"
      ],
      "properties": {
        "condition": {
          "type": "string",
          "example": "NEW",
          "description": "The condition of the offer.",
          "allowEmptyValue": false
        },
        "ean": {
          "type": "string",
          "example": "0000007740404",
          "description": "The EAN number associated with this product.",
          "allowEmptyValue": false
        },
        "fixedAmount": {
          "type": "number",
          "example": 0.99,
          "description": "Fixed fee.",
          "allowEmptyValue": false
        },
        "percentage": {
          "type": "number",
          "example": 15.0,
          "description": "Percentage of offer price. This percentage varies per product category.",
          "allowEmptyValue": false
        },
        "price": {
          "type": "number",
          "example": 10.99,
          "description": "The price of the product with a period as a decimal separator.",
          "allowEmptyValue": false
        },
        "reductions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reduction"
          }
        },
        "totalCost": {
          "type": "number",
          "example": 1.99,
          "description": "Total applicable fee calculated based on the offer price provided.",
          "allowEmptyValue": false
        },
        "totalCostWithoutReduction": {
          "type": "number",
          "example": 3.99,
          "description": "Total applicable fee calculated based on the offer price which would be in effect if you do not meet the maximum price criteria.",
          "allowEmptyValue": false
        }
      },
      "title": "Commission"
    },
    "CustomerDetails": {
      "type": "object",
      "required": [
        "addressSupplement",
        "city",
        "company",
        "countryCode",
        "deliveryPhoneNumber",
        "email",
        "extraAddressInformation",
        "firstName",
        "houseNumber",
        "houseNumberExtended",
        "salutationCode",
        "streetName",
        "surname",
        "vatNumber",
        "zipCode"
      ],
      "properties": {
        "addressSupplement": {
          "type": "string",
          "example": "Lorem Ipsum",
          "description": "The address supplement.",
          "allowEmptyValue": false
        },
        "city": {
          "type": "string",
          "example": "Utrecht",
          "description": "The city name.",
          "allowEmptyValue": false
        },
        "company": {
          "type": "string",
          "example": "bol.com",
          "description": "The company name.",
          "allowEmptyValue": false
        },
        "countryCode": {
          "type": "string",
          "example": "NL",
          "description": "The country code.",
          "allowEmptyValue": false
        },
        "deliveryPhoneNumber": {
          "type": "string",
          "example": "012123456",
          "description": "The delivery phone number.",
          "allowEmptyValue": false
        },
        "email": {
          "type": "string",
          "example": "billie@verkopen.bol.com",
          "description": "The e-mail address.",
          "allowEmptyValue": false
        },
        "extraAddressInformation": {
          "type": "string",
          "example": "Apartment",
          "description": "Extra information about the address.",
          "allowEmptyValue": false
        },
        "firstName": {
          "type": "string",
          "example": "Billie",
          "description": "The first name.",
          "allowEmptyValue": false
        },
        "houseNumber": {
          "type": "string",
          "example": 1,
          "description": "The house number.",
          "allowEmptyValue": false
        },
        "houseNumberExtended": {
          "type": "string",
          "example": "B",
          "description": "The extension on house number.",
          "allowEmptyValue": false
        },
        "salutationCode": {
          "type": "string",
          "example": "02",
          "description": "The salutation code.",
          "allowEmptyValue": false
        },
        "streetName": {
          "type": "string",
          "example": "Dorpstraat",
          "description": "The street name.",
          "allowEmptyValue": false
        },
        "surname": {
          "type": "string",
          "example": "Jansen",
          "description": "The surname.",
          "allowEmptyValue": false
        },
        "vatNumber": {
          "type": "string",
          "example": "NL999999999B99",
          "description": "The VAT number.",
          "allowEmptyValue": false
        },
        "zipCode": {
          "type": "string",
          "example": "1111 ZZ",
          "description": "The ZIP code.",
          "allowEmptyValue": false
        }
      },
      "title": "CustomerDetails"
    },
    "DeleteBulkRequest": {
      "type": "object",
      "required": [
        "retailerOfferIdentifier"
      ],
      "properties": {
        "retailerOfferIdentifier": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RetailerOfferIdentifier"
          }
        }
      },
      "title": "DeleteBulkRequest"
    },
    "Delivery windows for inbound shipments.": {
      "type": "object",
      "required": [
        "timeSlots"
      ],
      "properties": {
        "timeSlots": {
          "type": "array",
          "description": "An available timeslot to be reserved for inbound shipments.",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/TimeSlot"
          }
        }
      },
      "title": "Delivery windows for inbound shipments."
    },
    "Inbound": {
      "type": "object",
      "required": [
        "announcedBSKUs",
        "announcedQuantity",
        "fbbTransporter",
        "id",
        "labellingService",
        "products",
        "receivedBSKUs",
        "receivedQuantity",
        "reference",
        "state",
        "stateTransitions"
      ],
      "properties": {
        "announcedBSKUs": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "The number of announced BSKU‘s.",
          "allowEmptyValue": false
        },
        "announcedQuantity": {
          "type": "integer",
          "format": "int64",
          "example": 100,
          "description": "The number of announced items.",
          "allowEmptyValue": false
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "example": "2018-01-01T13:00:00.000+01:00",
          "description": "The date the inbound shipment was created in ISO 8601 format.",
          "allowEmptyValue": false
        },
        "fbbTransporter": {
          "description": "Transporter for the inbound shipment.",
          "allowEmptyValue": false,
          "$ref": "#/definitions/Transporter"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 12345678,
          "description": "A unique id for an inbound shipment.",
          "allowEmptyValue": false
        },
        "labellingService": {
          "type": "boolean",
          "example": true,
          "description": "Indicates whether the inbound will be labeled by bol.com or not.",
          "allowEmptyValue": false
        },
        "products": {
          "type": "array",
          "description": "List of products.",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/Product"
          }
        },
        "receivedBSKUs": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "The number of received BSKU‘s.",
          "allowEmptyValue": false
        },
        "receivedQuantity": {
          "type": "integer",
          "format": "int64",
          "example": 100,
          "description": "The number of received items.",
          "allowEmptyValue": false
        },
        "reference": {
          "type": "string",
          "example": "SHIPMENT1",
          "description": "A user defined reference to identify the inbound shipment with.",
          "allowEmptyValue": false
        },
        "state": {
          "type": "string",
          "example": "Draft",
          "description": "The current state of the inbound shipment.",
          "allowEmptyValue": false,
          "enum": [
            "Draft",
            "PreAnnounced",
            "ArrivedAtWH",
            "Cancelled"
          ]
        },
        "stateTransitions": {
          "type": "array",
          "description": "List of state transitions.",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/StateTransition"
          }
        },
        "timeSlot": {
          "description": "The chosen timeslot for the inbound shipment.",
          "allowEmptyValue": false,
          "$ref": "#/definitions/TimeSlot"
        }
      },
      "title": "Inbound"
    },
    "InboundRequest": {
      "type": "object",
      "required": [
        "fbbTransporter",
        "labellingService",
        "products",
        "timeSlot"
      ],
      "properties": {
        "fbbTransporter": {
          "description": "Transporter for the inbound shipment.",
          "allowEmptyValue": false,
          "$ref": "#/definitions/Transporter"
        },
        "labellingService": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether the inbound will be labeled by bol.com or not.",
          "allowEmptyValue": false
        },
        "products": {
          "type": "array",
          "description": "List of products.",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/Product"
          }
        },
        "reference": {
          "type": "string",
          "example": "SHIPMENT1",
          "description": "A user defined reference to identify the inbound shipment with.",
          "allowEmptyValue": false,
          "minLength": 1,
          "maxLength": 2147483647
        },
        "timeSlot": {
          "description": "The chosen timeslot for the inbound shipment.",
          "allowEmptyValue": false,
          "$ref": "#/definitions/TimeSlot"
        }
      },
      "title": "InboundRequest"
    },
    "Inbounds": {
      "type": "object",
      "required": [
        "inbounds",
        "totalCount",
        "totalPageCount"
      ],
      "properties": {
        "inbounds": {
          "type": "array",
          "description": "An inbound shipment.",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/Inbound"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Number of total inbound shipments.",
          "allowEmptyValue": false
        },
        "totalPageCount": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Total number of pages.",
          "allowEmptyValue": false
        }
      },
      "title": "Inbounds"
    },
    "InventoryOffer": {
      "type": "object",
      "required": [
        "bsku",
        "ean",
        "nckStock",
        "stock",
        "title"
      ],
      "properties": {
        "bsku": {
          "type": "string",
          "example": 2950002126612,
          "description": "The BSKU number associated with this product.",
          "allowEmptyValue": false
        },
        "ean": {
          "type": "string",
          "example": "0000007740404",
          "description": "The EAN number associated with this product.",
          "allowEmptyValue": false
        },
        "nckStock": {
          "type": "integer",
          "format": "int32",
          "example": 10,
          "description": "The stock that can't be sold (unsaleable)",
          "allowEmptyValue": false
        },
        "stock": {
          "type": "integer",
          "format": "int32",
          "example": 10,
          "description": "The stock that can be sold (saleable).",
          "allowEmptyValue": false
        },
        "title": {
          "type": "string",
          "example": "Product Title",
          "description": "The product title.",
          "allowEmptyValue": false
        }
      },
      "title": "InventoryOffer"
    },
    "InventoryResponse": {
      "type": "object",
      "required": [
        "offers",
        "totalCount",
        "totalPageCount"
      ],
      "properties": {
        "offers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryOffer"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "The total amount of unique numbers.",
          "allowEmptyValue": false
        },
        "totalPageCount": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "The total amount of available pages with offers.",
          "allowEmptyValue": false
        }
      },
      "title": "InventoryResponse"
    },
    "Link": {
      "type": "object",
      "required": [
        "href",
        "method",
        "rel"
      ],
      "properties": {
        "href": {
          "type": "string",
          "example": "https://api.bol.com/retailer/process-status/v2/1234567",
          "allowEmptyValue": false
        },
        "method": {
          "type": "string",
          "example": "GET",
          "description": "HTTP method",
          "allowEmptyValue": false
        },
        "rel": {
          "type": "string",
          "example": "self",
          "allowEmptyValue": false
        }
      },
      "title": "Link"
    },
    "OfferFile": {
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "url": {
          "type": "string",
          "example": "https://plazaapi.acc2.bol.com/offers/v2/export/sEyOhelBbnncFhqRHplYOvvgULPgFkbWiDmaKeOLqlGFSfibyrFCrTzMPNum.csv",
          "description": "URL pointing to a CSV file that can be used in the call to download the CSV file.",
          "allowEmptyValue": false
        }
      },
      "title": "OfferFile"
    },
    "OfferResponse": {
      "type": "object",
      "required": [
        "retailerOffers"
      ],
      "properties": {
        "retailerOffers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RetailerOffer"
          }
        }
      },
      "title": "OfferResponse"
    },
    "Order": {
      "type": "object",
      "required": [
        "customerDetails",
        "orderId",
        "orderItems"
      ],
      "properties": {
        "customerDetails": {
          "$ref": "#/definitions/OrderCustomerDetails"
        },
        "dateTimeOrderPlaced": {
          "type": "string",
          "format": "date-time",
          "example": "2017-02-09T12:39:48+01:00",
          "description": "The date/time in ISO 8601 format the order was placed.",
          "allowEmptyValue": false
        },
        "orderId": {
          "type": "string",
          "example": 4123456789,
          "description": "The order id.",
          "allowEmptyValue": false
        },
        "orderItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem"
          }
        }
      },
      "title": "Order",
      "description": "An order"
    },
    "OrderCustomerDetails": {
      "type": "object",
      "required": [
        "billingDetails",
        "shipmentDetails"
      ],
      "properties": {
        "billingDetails": {
          "$ref": "#/definitions/AddressDetails"
        },
        "shipmentDetails": {
          "$ref": "#/definitions/AddressDetails"
        }
      },
      "title": "OrderCustomerDetails",
      "description": "Customer details of the order"
    },
    "OrderItem": {
      "type": "object",
      "required": [
        "cancelRequest",
        "ean",
        "fulfilmentMethod",
        "offerCondition",
        "offerPrice",
        "orderItemId",
        "quantity",
        "title",
        "transactionFee"
      ],
      "properties": {
        "cancelRequest": {
          "type": "boolean",
          "example": false,
          "description": "True or False. True only if the consumer has cancelled the order before the seller has shipped it.",
          "allowEmptyValue": false
        },
        "ean": {
          "type": "string",
          "example": "0000007740404",
          "description": "The EAN number associated with this product.",
          "allowEmptyValue": false
        },
        "fulfilmentMethod": {
          "type": "string",
          "example": "FBR",
          "description": "Specifies whether this shipment has been fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).",
          "allowEmptyValue": false
        },
        "latestDeliveryDate": {
          "type": "string",
          "format": "date",
          "example": "2017-02-10",
          "description": "Result of the date the order was placed combined with the delivery promise made by the seller. This field has been renamed from “PromisedDeliveryDate”. ",
          "allowEmptyValue": false
        },
        "offerCondition": {
          "type": "string",
          "example": "NEW",
          "description": "Condition of the offer.",
          "allowEmptyValue": false
        },
        "offerPrice": {
          "type": "number",
          "format": "double",
          "example": 27.95,
          "description": "Price for the entire product amount. This means the Item Price multiplied by the Quantity.",
          "allowEmptyValue": false
        },
        "offerReference": {
          "type": "string",
          "example": "BOLCOM00123",
          "description": "Value provided by seller through Offer API as ‘ReferenceCode’.",
          "allowEmptyValue": false
        },
        "orderItemId": {
          "type": "string",
          "example": 2012345678,
          "description": "The id for the product (1 order can have multiple order items).",
          "allowEmptyValue": false
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "example": 10,
          "description": "Amount of the product being ordered.",
          "allowEmptyValue": false
        },
        "selectedDeliveryWindow": {
          "$ref": "#/definitions/SelectedDeliveryWindow"
        },
        "title": {
          "type": "string",
          "example": "Product Title",
          "description": "Title of the product as shown on the webshop.",
          "allowEmptyValue": false
        },
        "transactionFee": {
          "type": "number",
          "format": "double",
          "example": 5.18,
          "description": "Fee of the transaction.",
          "allowEmptyValue": false
        }
      },
      "title": "OrderItem",
      "description": "Order item details from an order"
    },
    "Orders": {
      "type": "object",
      "required": [
        "orders"
      ],
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Order"
          }
        }
      },
      "title": "Orders",
      "description": "Container for many orders"
    },
    "ProcessStatus": {
      "type": "object",
      "required": [
        "createTimestamp",
        "description",
        "eventType",
        "links",
        "status"
      ],
      "properties": {
        "createTimestamp": {
          "type": "string",
          "format": "date-time",
          "example": "2018-11-14T09:34:41.000+01:00",
          "description": "Time of creation of the response.",
          "allowEmptyValue": false
        },
        "description": {
          "type": "string",
          "example": "Example request for processing 987654321.",
          "description": "Describes the action that is being processed.",
          "allowEmptyValue": false
        },
        "entityId": {
          "type": "string",
          "example": 987654321,
          "description": "The id of the object being processed. E.g. in case of a shipment process id, you will receive the id of the order item being processed.",
          "allowEmptyValue": false
        },
        "errorMessage": {
          "type": "string",
          "example": "The example has been processed.",
          "description": "Shows error message if applicable.",
          "allowEmptyValue": false
        },
        "eventType": {
          "type": "string",
          "example": "PROCESS_EXAMPLE",
          "description": "Name of the requested action that is being processed.",
          "allowEmptyValue": false
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1234567,
          "description": "The process status id.",
          "allowEmptyValue": false
        },
        "links": {
          "type": "array",
          "description": "Lists available actions applicable to this endpoint.",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "status": {
          "type": "string",
          "example": "SUCCESS",
          "description": "Status of the action being processed.",
          "allowEmptyValue": false,
          "enum": [
            "PENDING",
            "SUCCESS",
            "FAILURE",
            "TIMEOUT"
          ]
        }
      },
      "title": "ProcessStatus"
    },
    "ProcessStatusResponse": {
      "type": "object",
      "required": [
        "processStatuses"
      ],
      "properties": {
        "processStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessStatus"
          }
        }
      },
      "title": "ProcessStatusResponse"
    },
    "Product": {
      "type": "object",
      "required": [
        "announcedQuantity"
      ],
      "properties": {
        "announcedQuantity": {
          "type": "integer",
          "format": "int32",
          "example": 100,
          "description": "The number of announced items.",
          "allowEmptyValue": false
        },
        "bsku": {
          "type": "string",
          "example": 2950002126612,
          "description": "The BSKU number associated with this product.",
          "allowEmptyValue": false
        },
        "ean": {
          "type": "string",
          "example": "0000007740404",
          "description": "The EAN number associated with this product.",
          "allowEmptyValue": false
        },
        "receivedQuantity": {
          "type": "integer",
          "format": "int32",
          "example": 100,
          "description": "The number of received items.",
          "allowEmptyValue": false
        },
        "state": {
          "type": "string",
          "example": "Draft",
          "description": "The current state of the inbound product.",
          "allowEmptyValue": false,
          "enum": [
            "Draft",
            "PreAnnounced",
            "ArrivedAtWH",
            "Cancelled"
          ]
        }
      },
      "title": "Product"
    },
    "ProductLabel": {
      "type": "object",
      "required": [
        "ean",
        "quantity"
      ],
      "properties": {
        "ean": {
          "type": "string",
          "example": "0000007740404",
          "description": "The EAN number associated with this product.",
          "allowEmptyValue": false
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "example": 10,
          "description": "Number of products to generate labels for.",
          "allowEmptyValue": false
        }
      },
      "title": "ProductLabel"
    },
    "ProductLabelsRequest": {
      "type": "object",
      "required": [
        "productLabels"
      ],
      "properties": {
        "productLabels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductLabel"
          }
        }
      },
      "title": "ProductLabelsRequest"
    },
    "PurchasableShippingLabel": {
      "type": "object",
      "required": [
        "discount",
        "labelType",
        "maxDimensions",
        "maxWeight",
        "purchasePrice",
        "retailerPrice",
        "shippingLabelCode",
        "transporterCode"
      ],
      "properties": {
        "discount": {
          "type": "number",
          "example": 1.0,
          "description": "The discount of the item that has been sold.",
          "allowEmptyValue": false
        },
        "labelType": {
          "type": "string",
          "example": "PARCEL",
          "description": "The type of the label, representing the way an item is being transported.",
          "allowEmptyValue": false
        },
        "maxDimensions": {
          "type": "string",
          "example": "10 x 10 x 10 cm",
          "description": "The dimensions of a package.",
          "allowEmptyValue": false
        },
        "maxWeight": {
          "type": "string",
          "example": "10 kg",
          "description": "The weight of a package.",
          "allowEmptyValue": false
        },
        "purchasePrice": {
          "type": "number",
          "example": 1.0,
          "description": "The price the item has been bought for.",
          "allowEmptyValue": false
        },
        "retailerPrice": {
          "type": "number",
          "example": 1.0,
          "description": "The price the item has been sold for.",
          "allowEmptyValue": false
        },
        "shippingLabelCode": {
          "type": "string",
          "example": "PLR00000001",
          "description": "An unique code referring to the shipping label.",
          "allowEmptyValue": false
        },
        "transporterCode": {
          "type": "string",
          "example": "TNT",
          "description": "A code representing the transporter which is being used for transportation.",
          "allowEmptyValue": false
        }
      },
      "title": "PurchasableShippingLabel"
    },
    "PurchasableShippingLabelsResponse": {
      "type": "object",
      "required": [
        "purchasableShippingLabels"
      ],
      "properties": {
        "purchasableShippingLabels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PurchasableShippingLabel"
          }
        }
      },
      "title": "PurchasableShippingLabelsResponse"
    },
    "Reduction": {
      "type": "object",
      "required": [
        "costReduction",
        "endDate",
        "maximumPrice",
        "startDate"
      ],
      "properties": {
        "costReduction": {
          "type": "number",
          "example": 2.99,
          "description": "Amount the will be deducted from the commission fee if the maximum price criteria is met.",
          "allowEmptyValue": false
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "example": "2018-01-01",
          "description": "Date at which time this commission reduction will end.",
          "allowEmptyValue": false
        },
        "maximumPrice": {
          "type": "number",
          "example": 29.99,
          "description": "Maximum offer price that can be used to still benefit from a commission reduction.",
          "allowEmptyValue": false
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "example": "2018-01-01",
          "description": "Date from which time this commission reduction is applicable.",
          "allowEmptyValue": false
        }
      },
      "title": "Reduction"
    },
    "RetailerOffer": {
      "type": "object",
      "required": [
        "condition",
        "deliveryCode",
        "description",
        "ean",
        "fulfilmentMethod",
        "price",
        "publish",
        "quantityInStock",
        "referenceCode",
        "status",
        "title",
        "unreservedStock"
      ],
      "properties": {
        "condition": {
          "type": "string",
          "example": "NEW",
          "description": "The condition of the offer.",
          "allowEmptyValue": false,
          "enum": [
            "NEW",
            "AS_NEW",
            "GOOD",
            "REASONABLE",
            "MODERATE"
          ]
        },
        "deliveryCode": {
          "type": "string",
          "example": "24uurs-21",
          "description": "The delivery promise that applies to this product.",
          "allowEmptyValue": false,
          "enum": [
            "24uurs-23",
            "24uurs-22",
            "24uurs-21",
            "24uurs-20",
            "24uurs-19",
            "24uurs-18",
            "24uurs-17",
            "24uurs-16",
            "24uurs-15",
            "24uurs-14",
            "24uurs-13",
            "24uurs-12",
            "1-2d",
            "2-3d",
            "3-4d",
            "3-5d",
            "4-8d",
            "1-8d",
            "MijnLeverbelofte"
          ]
        },
        "description": {
          "type": "string",
          "example": "Lorem ipsum",
          "description": "A description that is only applicable when the chosen condition is unequal to “NEW”. Note: it will be ignored if condition is NEW. Attention: Maximum amount of characters: 2000.",
          "allowEmptyValue": false
        },
        "ean": {
          "type": "string",
          "example": "0000007740404",
          "description": "The EAN number associated with this product.",
          "allowEmptyValue": false
        },
        "fulfilmentMethod": {
          "type": "string",
          "example": "FBB",
          "description": "Specifies whether this shipment has been fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).",
          "allowEmptyValue": false,
          "enum": [
            "FBR",
            "FBR"
          ]
        },
        "price": {
          "type": "number",
          "format": "double",
          "example": 10.99,
          "description": "The price of the product with a period as a decimal separator.",
          "allowEmptyValue": false
        },
        "publish": {
          "type": "boolean",
          "example": false,
          "description": "Boolean (true/false) determining whether the seller desires the product to be offered for sale on the bol.com website. Note: even when set to true, other factors may cause the offer not to be online.",
          "allowEmptyValue": false
        },
        "quantityInStock": {
          "type": "integer",
          "format": "int32",
          "example": 10,
          "description": "The amount of items in stock minus handled orders. As compared to the stock you sent us.",
          "allowEmptyValue": false
        },
        "referenceCode": {
          "type": "string",
          "example": "REF12345",
          "description": "A value that may help you identify this particular offer when receiving orders. This element can optionally be left empty. Attention: Maximum amount of characters: 20.",
          "allowEmptyValue": false
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "title": {
          "type": "string",
          "example": "Product Title",
          "description": "Title of the product as shown on the bol.com webshop. When the EAN is unknown at bol.com, your input will be shown. However, the bol.com title will be shown when it entails a known EAN. Attention: Maximum amount of characters: 500.",
          "allowEmptyValue": false
        },
        "unreservedStock": {
          "type": "integer",
          "format": "int32",
          "example": 10,
          "description": "The amount of items in stock minus handled orders. As compared to the stock you sent us.",
          "allowEmptyValue": false
        }
      },
      "title": "RetailerOffer"
    },
    "RetailerOfferIdentifier": {
      "type": "object",
      "required": [
        "condition",
        "ean"
      ],
      "properties": {
        "condition": {
          "type": "string",
          "description": "Condition of the offer. It is possible to have more conditions per EAN, this means one EAN can be linked to multiple offers. Please choose the EAN and condition combination you wish to delete. Note: if you do not specify a condition, all conditions for this EAN will be deleted.",
          "allowEmptyValue": false,
          "minLength": 1,
          "maxLength": 2147483647
        },
        "ean": {
          "type": "string",
          "example": 9781408845646,
          "description": "EAN number associated with this offer.",
          "allowEmptyValue": false,
          "minLength": 1,
          "maxLength": 2147483647
        }
      },
      "title": "RetailerOfferIdentifier"
    },
    "ReturnItem": {
      "type": "object",
      "required": [
        "ean",
        "fulfilmentMethod",
        "handled",
        "orderId",
        "quantity",
        "registrationDateTime",
        "returnNumber",
        "returnReason",
        "returnReasonComments",
        "title"
      ],
      "properties": {
        "customerDetails": {
          "$ref": "#/definitions/CustomerDetails"
        },
        "ean": {
          "type": "string",
          "example": 9789076174082,
          "description": "The EAN number associated with this product.",
          "allowEmptyValue": false
        },
        "fulfilmentMethod": {
          "type": "string",
          "example": "FBB",
          "description": "Specifies whether this shipment has been fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).",
          "allowEmptyValue": false
        },
        "handled": {
          "type": "boolean",
          "example": true,
          "description": "Boolean (true/false) determining whether the return was handled.",
          "allowEmptyValue": false
        },
        "handlingResult": {
          "type": "string",
          "example": "RETURN_RECEIVED",
          "description": "The handling result requested by the user.",
          "allowEmptyValue": false
        },
        "orderId": {
          "type": "integer",
          "format": "int64",
          "example": 4012345678,
          "description": "The order id.",
          "allowEmptyValue": false
        },
        "processingDateTime": {
          "type": "string",
          "format": "date-time",
          "example": "2018-04-17T10:55:37+02:00",
          "description": "The date/time in ISO 8601 format when the return was processed.",
          "allowEmptyValue": false
        },
        "processingResult": {
          "type": "string",
          "example": "ACCEPTED",
          "description": "The processing result of the return.",
          "allowEmptyValue": false
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Amount of the product being ordered.",
          "allowEmptyValue": false
        },
        "registrationDateTime": {
          "type": "string",
          "format": "date-time",
          "example": "2016-11-14+01:00",
          "description": "The date/time in ISO 8601 format of registration.",
          "allowEmptyValue": false
        },
        "returnNumber": {
          "type": "integer",
          "format": "int64",
          "example": 31234567,
          "description": "Specifies which return item is being handled.",
          "allowEmptyValue": false
        },
        "returnReason": {
          "type": "string",
          "example": "Niet naar verwachting",
          "description": "Return reason category.",
          "allowEmptyValue": false
        },
        "returnReasonComments": {
          "type": "string",
          "example": "Lorem Ipsum",
          "description": "Additional comments about the return.",
          "allowEmptyValue": false
        },
        "title": {
          "type": "string",
          "example": "Harry Potter en de steen der wijzen",
          "description": "The product title.",
          "allowEmptyValue": false
        },
        "trackAndTrace": {
          "type": "string",
          "example": "3SBOL0987654321",
          "description": "The track and trace code associated with this transport. The entered track and trace code will be verified. If you do not have the code, please omit this attribute entirely.",
          "allowEmptyValue": false
        }
      },
      "title": "ReturnItem"
    },
    "ReturnRequest": {
      "type": "object",
      "properties": {
        "handlingResult": {
          "type": "string",
          "example": "RETURN_RECEIVED",
          "allowEmptyValue": false,
          "enum": [
            "RETURN_RECEIVED",
            "EXCHANGE_PRODUCT",
            "RETURN_DOES_NOT_MEET_CONDITIONS",
            "REPAIR_PRODUCT",
            "CUSTOMER_KEEPS_PRODUCT_PAID",
            "STILL_APPROVED"
          ]
        },
        "quantityReturned": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "allowEmptyValue": false,
          "minimum": 0.0,
          "maximum": 9.223372036854776E+18,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        }
      },
      "title": "ReturnRequest"
    },
    "ReturnsResponse": {
      "type": "object",
      "required": [
        "returns"
      ],
      "properties": {
        "returns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnItem"
          }
        }
      },
      "title": "ReturnsResponse"
    },
    "SelectedDeliveryWindow": {
      "type": "object",
      "required": [
        "date",
        "end",
        "start"
      ],
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "SelectedDeliveryWindow"
    },
    "Shipment": {
      "type": "object",
      "required": [
        "customerDetails",
        "shipmentDate",
        "shipmentId",
        "shipmentItems",
        "shipmentReference",
        "transport"
      ],
      "properties": {
        "customerDetails": {
          "$ref": "#/definitions/CustomerDetails"
        },
        "shipmentDate": {
          "type": "string",
          "format": "date-time",
          "example": "2018-04-17T10:55:37+02:00",
          "description": "The date/time in ISO 8601 format when the order item was shipped.",
          "allowEmptyValue": false
        },
        "shipmentId": {
          "type": "integer",
          "format": "int64",
          "example": 541757635,
          "description": "The shipment id.",
          "allowEmptyValue": false
        },
        "shipmentItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShipmentItem"
          }
        },
        "shipmentReference": {
          "type": "string",
          "example": "BOLCOM001",
          "description": "Used for administration purposes.",
          "allowEmptyValue": false
        },
        "transport": {
          "$ref": "#/definitions/Transport"
        }
      },
      "title": "Shipment"
    },
    "ShipmentItem": {
      "type": "object",
      "required": [
        "shipmentOrderItem"
      ],
      "properties": {
        "shipmentOrderItem": {
          "$ref": "#/definitions/ShipmentOrderItem"
        }
      },
      "title": "ShipmentItem"
    },
    "ShipmentOrderItem": {
      "type": "object",
      "required": [
        "ean",
        "fulfilmentMethod",
        "latestDeliveryDate",
        "offerCondition",
        "offerPrice",
        "offerReference",
        "orderDate",
        "orderId",
        "orderItemId",
        "quantity",
        "title"
      ],
      "properties": {
        "ean": {
          "type": "string",
          "example": "0000007740404",
          "description": "The EAN number associated with this product.",
          "allowEmptyValue": false
        },
        "fulfilmentMethod": {
          "type": "string",
          "example": "FBB",
          "description": "Specifies whether this shipment has been fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).",
          "allowEmptyValue": false,
          "enum": [
            "FBR",
            "FBB"
          ]
        },
        "latestDeliveryDate": {
          "type": "string",
          "format": "date-time",
          "example": "2018-04-20T10:55:37+02:00",
          "description": "The date/time in ISO 8601 format when the order was promised to be delivered.",
          "allowEmptyValue": false
        },
        "offerCondition": {
          "type": "string",
          "example": "NEW",
          "description": "Condition of the offer.",
          "allowEmptyValue": false,
          "enum": [
            "NEW",
            "AS_NEW",
            "GOOD",
            "REASONABLE",
            "MODERATE"
          ]
        },
        "offerPrice": {
          "type": "number",
          "example": 12.99,
          "description": "Price for the entire product amount. This means the item price multiplied by the quantity.",
          "allowEmptyValue": false
        },
        "offerReference": {
          "type": "string",
          "example": "BOLCOM00123",
          "description": "Value provided by seller through Offer API as ‘ReferenceCode’.",
          "allowEmptyValue": false
        },
        "orderDate": {
          "type": "string",
          "format": "date-time",
          "example": "2018-04-17T10:55:37+02:00",
          "description": "The date/time in ISO 8601 format when the order was placed.",
          "allowEmptyValue": false
        },
        "orderId": {
          "type": "string",
          "example": 4123456789,
          "description": "The order id.",
          "allowEmptyValue": false
        },
        "orderItemId": {
          "type": "string",
          "example": 1234567891,
          "description": "Item being sent. The order item id can be retrieved through the order request.",
          "allowEmptyValue": false
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "example": 10,
          "description": "Amount of the product being ordered.",
          "allowEmptyValue": false
        },
        "selectedDeliveryWindow": {
          "$ref": "#/definitions/SelectedDeliveryWindow"
        },
        "title": {
          "type": "string",
          "example": "Product Title",
          "description": "The product title.",
          "allowEmptyValue": false
        }
      },
      "title": "ShipmentOrderItem"
    },
    "ShipmentRequest": {
      "type": "object",
      "properties": {
        "shipmentReference": {
          "type": "string",
          "example": "B321SR",
          "description": "Used for administration purposes.",
          "allowEmptyValue": false
        },
        "shippingLabelCode": {
          "type": "string",
          "example": "PLR00000002",
          "description": "Specifies shipping label to be used for this shipment. Can be retrieved through the shipping label endpoint.",
          "allowEmptyValue": false
        },
        "transport": {
          "$ref": "#/definitions/TransportInstruction"
        }
      },
      "title": "ShipmentRequest"
    },
    "ShipmentResponse": {
      "type": "object",
      "required": [
        "shipments"
      ],
      "properties": {
        "shipments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Shipment"
          }
        }
      },
      "title": "ShipmentResponse"
    },
    "StateTransition": {
      "type": "object",
      "required": [
        "state"
      ],
      "properties": {
        "state": {
          "type": "string",
          "example": "Draft",
          "description": "The state that was transitioned into.",
          "allowEmptyValue": false,
          "enum": [
            "Draft",
            "PreAnnounced",
            "ArrivedAtWH",
            "Cancelled"
          ]
        },
        "stateDate": {
          "type": "string",
          "format": "date-time",
          "example": "2018-01-01T13:00:00.000+01:00",
          "description": "The transition date and time in ISO 8601 format.",
          "allowEmptyValue": false
        }
      },
      "title": "StateTransition"
    },
    "Status": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage",
        "valid"
      ],
      "properties": {
        "errorCode": {
          "type": "string",
          "example": "ERR1234",
          "description": "If published is set to N, this field will show the associated error code.",
          "allowEmptyValue": false
        },
        "errorMessage": {
          "type": "string",
          "example": "Price too high",
          "description": "Explains the reason why this offer is not shown if Published is N.",
          "allowEmptyValue": false
        },
        "valid": {
          "type": "boolean",
          "example": true,
          "description": "Shows whether or not this offer is valid on the website. It is set to 'false' by bol.com if any errors occur in this offer or if it is out of stock.",
          "allowEmptyValue": false
        }
      },
      "title": "Status"
    },
    "TimeSlot": {
      "type": "object",
      "required": [
        "end",
        "start"
      ],
      "properties": {
        "end": {
          "type": "string",
          "format": "date-time",
          "example": "2018-01-01T13:00:00.000+01:00",
          "description": "The timeslot end date and time in ISO 8601 format.",
          "allowEmptyValue": false
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "example": "2018-01-01T13:00:00.000+01:00",
          "description": "The timeslot start date and time in ISO 8601 format.",
          "allowEmptyValue": false
        }
      },
      "title": "TimeSlot"
    },
    "Transport": {
      "type": "object",
      "required": [
        "trackAndTrace",
        "transportId",
        "transporterCode"
      ],
      "properties": {
        "shippingLabelId": {
          "type": "integer",
          "format": "int64",
          "example": 123456789,
          "description": "The shipping label id.",
          "allowEmptyValue": false
        },
        "trackAndTrace": {
          "type": "string",
          "example": "3SBOL0987654321",
          "description": "The track and trace code associated with this transport. The entered track and trace code will be verified. If you do not have the code, please omit this attribute entirely.",
          "allowEmptyValue": false
        },
        "transportId": {
          "type": "integer",
          "format": "int64",
          "example": 312778947,
          "description": "The transport id.",
          "allowEmptyValue": false
        },
        "transporterCode": {
          "type": "string",
          "example": "TNT",
          "description": "Specify the transporter used to fulfil this shipment.",
          "allowEmptyValue": false
        }
      },
      "title": "Transport"
    },
    "TransportInstruction": {
      "type": "object",
      "required": [
        "trackAndTrace",
        "transporterCode"
      ],
      "properties": {
        "trackAndTrace": {
          "type": "string",
          "example": "3SBOL0987654321",
          "description": "The track and trace code associated with this transport. The entered track and trace code will be verified. If you do not have the code, please omit this attribute entirely.",
          "allowEmptyValue": false
        },
        "transporterCode": {
          "type": "string",
          "example": "TNT",
          "description": "Specify the transporter used to fulfil this shipment.",
          "allowEmptyValue": false
        }
      },
      "title": "TransportInstruction"
    },
    "Transporter": {
      "type": "object",
      "required": [
        "code",
        "name"
      ],
      "properties": {
        "code": {
          "type": "string",
          "example": "TNT",
          "description": "The transporter code.",
          "allowEmptyValue": false
        },
        "name": {
          "type": "string",
          "example": "TNT Post",
          "description": "The transporter name.",
          "allowEmptyValue": false
        }
      },
      "title": "Transporter"
    },
    "TransportersResponse": {
      "type": "object",
      "required": [
        "fbbTransporters"
      ],
      "properties": {
        "fbbTransporters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transporter"
          }
        }
      },
      "title": "TransportersResponse"
    },
    "UpsertRequest": {
      "type": "object",
      "properties": {
        "retailerOffer": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpsertRetailerOffer"
          }
        }
      },
      "title": "UpsertRequest",
      "description": "An array of offers to create or update"
    },
    "UpsertRetailerOffer": {
      "type": "object",
      "required": [
        "condition",
        "deliveryCode",
        "ean"
      ],
      "properties": {
        "condition": {
          "type": "string",
          "example": "NEW",
          "description": "The condition of the offer. It is possible to have more conditions per EAN.",
          "allowEmptyValue": false,
          "enum": [
            "NEW",
            "AS_NEW",
            "GOOD",
            "REASONABLE",
            "MODERATE"
          ]
        },
        "deliveryCode": {
          "type": "string",
          "description": "The delivery promise that applies to this product.",
          "allowEmptyValue": false,
          "enum": [
            "24uurs-23",
            "24uurs-22",
            "24uurs-21",
            "24uurs-20",
            "24uurs-19",
            "24uurs-18",
            "24uurs-17",
            "24uurs-16",
            "24uurs-15",
            "24uurs-14",
            "24uurs-13",
            "24uurs-12",
            "1-2d",
            "2-3d",
            "3-4d",
            "3-5d",
            "4-8d",
            "1-8d",
            "MijnLeverbelofte"
          ]
        },
        "description": {
          "type": "string",
          "example": "Lorem ipsum",
          "description": "A description that is only applicable when the chosen condition is unequal to “NEW”. Note: it will be ignored if condition is NEW. Attention: Maximum amount of characters: 2000.",
          "allowEmptyValue": false,
          "minLength": 0,
          "maxLength": 2000
        },
        "ean": {
          "type": "string",
          "example": "0000007740404",
          "description": "The EAN number associated with this product.",
          "allowEmptyValue": false,
          "minLength": 1,
          "maxLength": 2147483647
        },
        "fulfilmentMethod": {
          "type": "string",
          "description": "Specifies whether this shipment has been fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).",
          "allowEmptyValue": false,
          "enum": [
            "FBR",
            "FBR"
          ]
        },
        "price": {
          "type": "number",
          "format": "double",
          "example": 10.99,
          "description": "The price of the product with a period as a decimal separator.",
          "allowEmptyValue": false,
          "minimum": 0.0,
          "maximum": 9.223372036854776E+18,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "publish": {
          "type": "boolean",
          "example": false,
          "description": "Boolean (true/false) determining whether the seller desires the product to be offered for sale on the bol.com website. Note: even when set to true, other factors may cause the offer not to be online.",
          "allowEmptyValue": false
        },
        "quantityInStock": {
          "type": "integer",
          "format": "int32",
          "example": 10,
          "description": "The amount of items in stock. Minimum value: 0. Maximum value: 999.",
          "allowEmptyValue": false,
          "minimum": 0.0,
          "maximum": 9.223372036854776E+18,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "referenceCode": {
          "type": "string",
          "example": "REF12345",
          "description": "A value that may help you identify this particular offer when receiving orders. This element can optionally be left empty. Attention: Maximum amount of characters: 20.",
          "allowEmptyValue": false,
          "minLength": 0,
          "maxLength": 20
        },
        "title": {
          "type": "string",
          "example": "Product Title",
          "description": "Title of the product as shown on the bol.com webshop. When the EAN is unknown at bol.com, your input will be shown. However, the bol.com title will be shown when it entails a known EAN. Attention: Maximum amount of characters: 500.",
          "allowEmptyValue": false,
          "minLength": 0,
          "maxLength": 500
        }
      },
      "title": "UpsertRetailerOffer"
    }
  }
}